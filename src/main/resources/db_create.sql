CREATE TABLE IF NOT EXISTS USERS
    (
        ID INTEGER NOT NULL AUTO_INCREMENT,
        EMAIL VARCHAR(100) NOT NULL,
        PASSWORD VARCHAR(100) NOT NULL,
        CONSTRAINT PK_USERS PRIMARY KEY (ID),
        CONSTRAINT USERS_UNIQUE_EMAIL UNIQUE (EMAIL)
    );
	

CREATE TABLE IF NOT EXISTS ALBUMS
    (
        ID INTEGER NOT NULL AUTO_INCREMENT,
        NAME VARCHAR(100) NOT NULL,
        USER_ID INTEGER NOT NULL,
        CONSTRAINT PK_ALBUMS PRIMARY KEY (ID),
        CONSTRAINT FK_ALBUMS FOREIGN KEY (USER_ID) REFERENCES USERS (ID) ON DELETE CASCADE,
        CONSTRAINT ALBUMS_UNIQUE_NAME UNIQUE (NAME, USER_ID)
    );
	
CREATE TABLE IF NOT EXISTS FILES
    (
        ID INTEGER NOT NULL AUTO_INCREMENT,
        NAME VARCHAR(100) NOT NULL,
        FILE BLOB(2147483647) NOT NULL,
        FILE_SMALL BLOB(2147483647) NOT NULL,
        ALBUM_ID INTEGER NOT NULL,
        CONSTRAINT PK_FILES PRIMARY KEY (ID),
        CONSTRAINT FK_USERS FOREIGN KEY (ALBUM_ID) REFERENCES ALBUMS (ID) ON DELETE CASCADE
    );
	
CREATE TABLE IF NOT EXISTS SHARE_INFORMATION
    (
        ID INTEGER NOT NULL AUTO_INCREMENT,
        ALBUM_ID INTEGER NOT NULL,
        USER_ID INTEGER NOT NULL,
        CONSTRAINT PK_SHARE_INFORMATION PRIMARY KEY (ID),
        CONSTRAINT FK_SHARE_ALBUM FOREIGN KEY (ALBUM_ID) REFERENCES ALBUMS (ID) ON DELETE CASCADE,
        CONSTRAINT FK_SHARE_USER FOREIGN KEY (USER_ID) REFERENCES USERS (ID) ON DELETE CASCADE
    );